services:
  postgres:
    image: 'postgres:16.2'
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
  app-role-init:
    image: 'postgres:16.2'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_HOST=postgres'
      - 'POSTGRES_PORT=5432'
      - 'APP_USER=${APP_USER}'
      - 'MIGRATION_USER=${MIGRATION_USER}'
    restart: 'on-failure'
    volumes:
      - secrets-volume:/run/secrets
      - ./startup-scripts/init-db-roles.sh:/init-db-roles.sh:ro
    entrypoint: ["bash", "/init-db-roles.sh"]
  spring-api:
    build: .
    depends_on:
      app-role-init:
        condition: service_completed_successfully
    environment:
      - 'SPRING_PROFILES_ACTIVE=local'
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}'
      - 'SPRING_DATASOURCE_USERNAME=${APP_USER}'
      - 'LIQUIBASE_USER=${MIGRATION_USER}'
    ports:
      - '8080:8080'
    volumes:
      - secrets-volume:/run/secrets
      - ./startup-scripts/entrypoint.sh:/entrypoint.sh:ro
    entrypoint: ["bash", "/entrypoint.sh"]
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8080/api/actuator/health || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  secrets-volume:
